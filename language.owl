#using owl.v4

.whitespace ' ' '\t' '\n'
.line-comment-token '//'

statements = statement{';'}
statement =
  expression |
  constructor |
  method_call |
  routine_call |
  property_assignment |
  variable_assignment |
  routine_definition |
  rule_definition

actions = action{';'}
action =
  method_call |
  routine_call |
  property_assignment |
  variable_assignment |
  await

constructor = identifier@module_name '=' identifier@module_type [ '(' expression@argument{','} ')' ]
property_assignment = identifier@module_name '.' identifier@property_name '=' expression
variable_assignment = identifier@variable_name '=' expression
rule_definition = 'when' expression [ 'then' actions 'end' ]
routine_definition = identifier@routine_name [ ':=' actions 'end' ]
routine_call = identifier@routine_name [ '(' ')' ]
await = 'await' expression
method_call = identifier@module_name '.' identifier@method_name [ '(' expression@argument{','} ')' ]

expression =
    string : string
    integer : integer
    number : num
    identifier : var
    identifier@module_name '.' identifier@property_name : prop
    [ '(' expression ')' ] : parens
  .operators infix left
    '^' | '**' : pow
  .operators prefix
    '-' : negate
  .operators infix flat
    '*' : times
    '/' : divided-by
  .operators infix flat
    '+' : plus
    '-' : minus
  .operators infix flat
    '>' : greater
    '<' : less
    '>=' : greater_equal
    '<=' : less_equal
    '==' : equal
    '!=' : unequal
  .operators prefix
    '!' | 'not' : not
  .operators infix flat
    '&&' | 'and' : and
    '||' | 'or' : or
