#using owl.v4

.whitespace ' ' '\t' '\n'
.line-comment-token '//'

statements = statement*
statement = (
  constructor |
  method_call |
  routine_call |
  property_getter |
  property_assignment |
  variable_name |
  variable_assignment |
  routine_definition |
  rule_definition
) (';')?

actions = action*
action = (
  method_call |
  routine_call |
  property_assignment |
  variable_assignment |
  await
) (';')?

constructor = module_name '=' module_type '(' ( argument (',' argument)* )? ')'
module_type = identifier

property_assignment = property_setter '=' expression
variable_assignment = variable_name '=' expression

rule_definition = 'when' condition [ 'then' actions  ('else' actions)? 'end' ]

routine_definition = routine_name [ ':=' actions 'end' ]
routine_call = routine_name '(' ')'

await = 'await' condition

condition = expression comparison expression

expression = integer | neg_integer | number | neg_number | property_getter
comparison =
  '<': less
  '==' : equal
  '>': greater
  '!=' : unequal
  '<=': less_equal
  '>=': greater_equal

property_setter = module_name '.' property_name
property_getter = module_name '.' property_name
method_call = module_name '.' method_name '(' ( argument (',' argument)* )? ')'

argument = integer | neg_integer | number | neg_number | identifier | string
neg_integer = '-' integer
neg_number = '-' number
module_name = identifier
routine_name = identifier
property_name = identifier
variable_name = identifier
method_name = identifier